{"ast":null,"code":"var _jsxFileName = \"C:\\\\whiteboard\\\\client\\\\src\\\\components\\\\DrawingCanvas.js\",\n  _s = $RefreshSig$();\n// client/src/components/DrawingCanvas.js\nimport React, { useEffect, useRef, useState } from \"react\";\nimport socket from \"../socket\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DrawingCanvas = ({\n  roomId,\n  color,\n  width\n}) => {\n  _s();\n  const canvasRef = useRef(null);\n  const [drawing, setDrawing] = useState(false);\n  useEffect(() => {\n    const canvas = canvasRef.current;\n    const ctx = canvas.getContext(\"2d\");\n    const resizeCanvas = () => {\n      canvas.width = window.innerWidth;\n      canvas.height = window.innerHeight;\n      console.log(\"🖼️ Canvas resized to\", canvas.width, canvas.height);\n    };\n    resizeCanvas();\n    window.addEventListener(\"resize\", resizeCanvas);\n    const drawPath = ({\n      path,\n      color,\n      width\n    }) => {\n      if (!path.length) return;\n      ctx.strokeStyle = color;\n      ctx.lineWidth = width;\n      ctx.lineJoin = \"round\";\n      ctx.lineCap = \"round\";\n      ctx.beginPath();\n      ctx.moveTo(path[0].x, path[0].y);\n      for (let i = 1; i < path.length; i++) {\n        ctx.lineTo(path[i].x, path[i].y);\n      }\n      ctx.stroke();\n    };\n    socket.on(\"draw-move\", drawPath);\n    socket.on(\"clear-canvas\", () => ctx.clearRect(0, 0, canvas.width, canvas.height));\n    return () => {\n      window.removeEventListener(\"resize\", resizeCanvas);\n      socket.off(\"draw-move\");\n      socket.off(\"clear-canvas\");\n    };\n  }, []);\n  const path = useRef([]);\n  const startDrawing = e => {\n    setDrawing(true);\n    path.current = [getCoordinates(e)];\n  };\n  const draw = e => {\n    if (!drawing) return;\n    const point = getCoordinates(e);\n    path.current.push(point);\n\n    // Draw immediately on local canvas\n    const ctx = canvasRef.current.getContext(\"2d\");\n    const lastPoint = path.current[path.current.length - 2];\n    if (lastPoint) {\n      ctx.strokeStyle = color;\n      ctx.lineWidth = width;\n      ctx.lineJoin = \"round\";\n      ctx.lineCap = \"round\";\n      ctx.beginPath();\n      ctx.moveTo(lastPoint.x, lastPoint.y);\n      ctx.lineTo(point.x, point.y);\n      ctx.stroke();\n    }\n    socket.emit(\"draw-move\", {\n      path: [lastPoint, point],\n      color,\n      width\n    });\n  };\n  const endDrawing = () => {\n    setDrawing(false);\n    socket.emit(\"draw-end\", {\n      path: path.current,\n      color,\n      width\n    });\n    path.current = [];\n  };\n  const getCoordinates = e => {\n    var _e$touches, _e$touches$, _e$touches2, _e$touches2$;\n    const rect = canvasRef.current.getBoundingClientRect();\n    const clientX = e.clientX || ((_e$touches = e.touches) === null || _e$touches === void 0 ? void 0 : (_e$touches$ = _e$touches[0]) === null || _e$touches$ === void 0 ? void 0 : _e$touches$.clientX);\n    const clientY = e.clientY || ((_e$touches2 = e.touches) === null || _e$touches2 === void 0 ? void 0 : (_e$touches2$ = _e$touches2[0]) === null || _e$touches2$ === void 0 ? void 0 : _e$touches2$.clientY);\n    return {\n      x: clientX - rect.left,\n      y: clientY - rect.top\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"canvas\", {\n    ref: canvasRef,\n    style: {\n      position: \"absolute\",\n      top: 0,\n      left: 0,\n      zIndex: 1,\n      backgroundColor: \"#ffffff\",\n      // visible canvas\n      touchAction: \"none\"\n    },\n    onMouseDown: startDrawing,\n    onMouseMove: draw,\n    onMouseUp: endDrawing,\n    onMouseLeave: endDrawing,\n    onTouchStart: startDrawing,\n    onTouchMove: draw,\n    onTouchEnd: endDrawing\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n};\n_s(DrawingCanvas, \"uWPZ+e5+fHb6LTNeDcBLtmnQtOg=\");\n_c = DrawingCanvas;\nexport default DrawingCanvas;\nvar _c;\n$RefreshReg$(_c, \"DrawingCanvas\");","map":{"version":3,"names":["React","useEffect","useRef","useState","socket","jsxDEV","_jsxDEV","DrawingCanvas","roomId","color","width","_s","canvasRef","drawing","setDrawing","canvas","current","ctx","getContext","resizeCanvas","window","innerWidth","height","innerHeight","console","log","addEventListener","drawPath","path","length","strokeStyle","lineWidth","lineJoin","lineCap","beginPath","moveTo","x","y","i","lineTo","stroke","on","clearRect","removeEventListener","off","startDrawing","e","getCoordinates","draw","point","push","lastPoint","emit","endDrawing","_e$touches","_e$touches$","_e$touches2","_e$touches2$","rect","getBoundingClientRect","clientX","touches","clientY","left","top","ref","style","position","zIndex","backgroundColor","touchAction","onMouseDown","onMouseMove","onMouseUp","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/whiteboard/client/src/components/DrawingCanvas.js"],"sourcesContent":["// client/src/components/DrawingCanvas.js\r\nimport React, { useEffect, useRef, useState } from \"react\";\r\nimport socket from \"../socket\";\r\n\r\nconst DrawingCanvas = ({ roomId, color, width }) => {\r\n  const canvasRef = useRef(null);\r\n  const [drawing, setDrawing] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext(\"2d\");\r\n\r\n    const resizeCanvas = () => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n      console.log(\"🖼️ Canvas resized to\", canvas.width, canvas.height);\r\n    };\r\n\r\n    resizeCanvas();\r\n    window.addEventListener(\"resize\", resizeCanvas);\r\n\r\n    const drawPath = ({ path, color, width }) => {\r\n      if (!path.length) return;\r\n      ctx.strokeStyle = color;\r\n      ctx.lineWidth = width;\r\n      ctx.lineJoin = \"round\";\r\n      ctx.lineCap = \"round\";\r\n      ctx.beginPath();\r\n      ctx.moveTo(path[0].x, path[0].y);\r\n      for (let i = 1; i < path.length; i++) {\r\n        ctx.lineTo(path[i].x, path[i].y);\r\n      }\r\n      ctx.stroke();\r\n    };\r\n\r\n    socket.on(\"draw-move\", drawPath);\r\n    socket.on(\"clear-canvas\", () => ctx.clearRect(0, 0, canvas.width, canvas.height));\r\n\r\n    return () => {\r\n      window.removeEventListener(\"resize\", resizeCanvas);\r\n      socket.off(\"draw-move\");\r\n      socket.off(\"clear-canvas\");\r\n    };\r\n  }, []);\r\n\r\n  const path = useRef([]);\r\n\r\n  const startDrawing = (e) => {\r\n    setDrawing(true);\r\n    path.current = [getCoordinates(e)];\r\n  };\r\n\r\n  const draw = (e) => {\r\n    if (!drawing) return;\r\n    const point = getCoordinates(e);\r\n    path.current.push(point);\r\n\r\n    // Draw immediately on local canvas\r\n    const ctx = canvasRef.current.getContext(\"2d\");\r\n    const lastPoint = path.current[path.current.length - 2];\r\n    if (lastPoint) {\r\n      ctx.strokeStyle = color;\r\n      ctx.lineWidth = width;\r\n      ctx.lineJoin = \"round\";\r\n      ctx.lineCap = \"round\";\r\n      ctx.beginPath();\r\n      ctx.moveTo(lastPoint.x, lastPoint.y);\r\n      ctx.lineTo(point.x, point.y);\r\n      ctx.stroke();\r\n    }\r\n\r\n    socket.emit(\"draw-move\", {\r\n      path: [lastPoint, point],\r\n      color,\r\n      width,\r\n    });\r\n  };\r\n\r\n  const endDrawing = () => {\r\n    setDrawing(false);\r\n    socket.emit(\"draw-end\", {\r\n      path: path.current,\r\n      color,\r\n      width,\r\n    });\r\n    path.current = [];\r\n  };\r\n\r\n  const getCoordinates = (e) => {\r\n    const rect = canvasRef.current.getBoundingClientRect();\r\n    const clientX = e.clientX || e.touches?.[0]?.clientX;\r\n    const clientY = e.clientY || e.touches?.[0]?.clientY;\r\n\r\n    return {\r\n      x: clientX - rect.left,\r\n      y: clientY - rect.top,\r\n    };\r\n  };\r\n\r\n  return (\r\n    <canvas\r\n      ref={canvasRef}\r\n      style={{\r\n        position: \"absolute\",\r\n        top: 0,\r\n        left: 0,\r\n        zIndex: 1,\r\n        backgroundColor: \"#ffffff\", // visible canvas\r\n        touchAction: \"none\",\r\n      }}\r\n      onMouseDown={startDrawing}\r\n      onMouseMove={draw}\r\n      onMouseUp={endDrawing}\r\n      onMouseLeave={endDrawing}\r\n      onTouchStart={startDrawing}\r\n      onTouchMove={draw}\r\n      onTouchEnd={endDrawing}\r\n    />\r\n  );\r\n};\r\n\r\nexport default DrawingCanvas;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}